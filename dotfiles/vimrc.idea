" https://medium.com/@danidiaz/configuring-ideavimrc-de16a4da0715
" https://github.com/JetBrains/ideavim
" https://github.com/Valloric/dotfiles/blob/master/intellij/ideavimrc
" https://gist.github.com/dewaka/ef947e52767bf453eaf77c852051eb7e

set ignorecase
set smartcase
set scrolloff=3     " 3 lines above/below cursor when scrolling

set showmode        " message on the status line to show current mode
set relativenumber
set number

set visualbell
set noerrorbells

" https://github.com/JetBrains/ideavim/wiki/Select-mode
" set selectmode-=template

" Integrate with system clipboard
set clipboard=unnamedplus,unnamed
"set clipboard+=unnamed

" https://youtrack.jetbrains.com/issue/VIM-959
set ideamarks

" Use Idea to join lines smartly
" https://github.com/JetBrains/ideavim/wiki/%60ideajoin%60-examples
set ideajoin

" ==========================================================
"     Emulated Plugins
" https://github.com/JetBrains/ideavim/wiki/emulated-plugins
" ==========================================================

" dia daa cia caa
" set argtextobj

" die dae cie cae
" set textobj-entire

" https://youtrack.jetbrains.com/issue/VIM-1521
set commentary

set surround
set easymotion

set multiple-cursors
" OSX has special characters that are mapped to option+key. BUT we try using Unicode Hex Input
"map <C-N>  <A-N>
"map <C-P>  <A-P>
"map <C-X>  <A-X>
"map g<C-N> g<A-N>

" Repeat IDEA keymap to fight conflicts
map <C-Up> :action EditorSelectWord<CR>
map <C-Down> :action EditorUnSelectWord<CR>

" =======================================

let mapleader = ","

" jk as a better Esc to get back to normal mode
imap jk <Esc>
vmap jk <Esc>

" Impaired actions with [ and ] namespacing
" =========================================

" These create newlines like o and O but stay in normal mode
nnoremap [<space> O<Esc>j
nnoremap ]<space> o<Esc>k
" multiple cursors
nnoremap [f :action PreviousOccurence<cr>
nnoremap ]f :action NextOccurence<cr>
" line up/down
nnoremap [l :action MoveLineUp<cr>
nnoremap ]l :action MoveLineDown<cr>
" statement up/down
nnoremap [s :action MoveStatementUp<cr>
nnoremap ]s :action MoveStatementDown<cr>
" find changes
nnoremap [c :action VcsShowPrevChangeMarker<cr>
nnoremap ]c :action VcsShowNextChangeMarker<cr>

" =====================================================

" IdeaVim uses 'a' for alt instead of Vim's 'm'
nnoremap <a-j> 15gj
nnoremap <a-k> 15gk

" Won't work in visual mode (with vmap) for some reason.
" Use default map of <c-/> for that.
nnoremap gcc :action CommentByLineComment<cr>

" Closing tabs
nnoremap <leader>q :action CloseContent<cr>
nnoremap <leader>Q :action ReopenClosedTab<cr>

" NOTE: 'unmap <C-a>' does not work in IdeaVim, but 'map <C-a>' does (it
" maps to nothing, BUT we still need to configure 'VIM Emulation' to use
" IDE action)
"
" incremenet number in source is not that interesting
" map <C-a> <Nop>

" jump lists
nnoremap <C-i> :action Forward<CR>
nnoremap <C-o> :action Back<CR>
" Otherwise we have to bypass it somehow by making Ctrl-O and Ctrl-I IDE
" shortcuts, instead of vim commands, and mapping them to Back/Forward in keymap.

" standard VIM mapping for GotoDeclaration
nnoremap <C-]> :action GotoDeclaration<CR>

" ========================================
"    Leader key based alternatives
" ========================================

" toggle relative line numbers
nnoremap <leader>z :set relativenumber!<CR>

" These are leader-based alternative shortcuts for my most used actions
" whose corresponding idea shortcuts require hand-stretching combinations,
" function keys, Home or Insert

"nmap <leader>a :action Switcher<cr>

"nmap <leader>s :action GotoSymbol<cr>

"nmap <leader>g :action GotoDeclaration<cr>
"nmap <Leader>b :action GotoDeclaration<CR>

"nmap <leader>i :action GotoImplementation<cr>
"nmap <Leader>u :action GotoSuperMethod<CR>

"nmap <leader>t :action GotoTest<cr>

" Refactorings
"vmap T :action Refactorings.QuickListPopupAction<cr>
"nmap <leader>rr :action RenameElement<cr>
"nmap <Leader>r :action RenameElement<CR>
"nmap <leader>rI :action OptimizeImports<cr>
" Inspection
"nmap <leader>rc :action InspectCode<cr>

" Pretty print code
"nmap == :action ReformatCode<cr>

" Switches between .cc and .h file!
" nmap <leader>s :action GotoRelated<cr>

" File members
"nmap <leader>M :action ActivateStructureToolWindow<cr>
"nmap <leader>t :action ExpressionTypeInfo<cr>

" Usages
"nmap <leader>u :action FindUsages<cr>

" Errors
"nmap <leader>d :action ShowErrorDescription<cr>
nmap <Space> :action GotoNextError<CR>
" Rider specific
"nmap <leader><Space> :action ReSharperGotoNextErrorInSolution<CR>
nmap <S-Space> :action ReSharperGotoNextErrorInSolution<CR>
"nmap <leader>x :action GotoNextError<cr>
"nmap <leader>X :action GotoPreviousError<cr>

" Bookmarks
"nmap <leader>b :action ShowBookmarks<cr>

" Terminal
"nmap <leader>T :action ActivateTerminalToolWindow<cr>

" To navigate between split panes
"nmap <leader>wo :action NextSplitter<cr>
"nmap <leader>wp :action PrevSplitter<cr>
"nmap <leader>j :action PrevSplitter<cr>

" Splits manipulation
"nmap <leader>ws :action SplitHorizontally<cr>
"nmap <leader>wv :action SplitVertically<cr>
"nmap <leader>wc :action Unsplit<cr>
"nmap <leader>wC :action UnsplitAll<cr>
"nmap <leader>wd :action OpenEditorInOppositeTabGroup<cr>
"nmap <leader><leader> :action VimFilePrevious<cr>
"nmap <leader>ww :action JumpToLastWindow<cr>
"nmap <leader>p :action JumpToLastWindow<cr>
"nmap <Leader>w :action JumpToLastWindow<CR>



" Use leader key sequences to access IDE commands
"nmap <leader>a :action $SelectAll<CR>
"nmap <leader>b :action GotoDeclaration<CR>
"nmap <leader>c :action $Copy<CR>
"nmap <leader>d :action EditorDuplicate<CR>
"nmap <leader>e :action RecentFiles<CR>
"nmap <leader>f :action Find<CR>
"nmap <leader>g :action GotoLine<CR>
"nmap <leader>h :action TypeHierarchy<CR>
"nmap <leader>i :action ImplementMethods<CR>
"nmap <leader>j :action
"nmap <leader>k :action
"nmap <leader>l :action
"nmap <leader>m :action EditorScrollToCenter<CR>
"nmap <leader>n :action FileChooser.NewFolder<CR>
"nmap <leader>n :action SearchEverywhere<CR>
"nmap <leader>o :action OverrideMethods<CR>
"nmap <leader>p :action ParameterInfo<CR>
"nmap <leader>q :action QuickJavaDoc<CR>
"nmap <leader>r :action Replace<CR>
"nmap <leader>s :action SaveAll<CR>
"nmap <leader>t :action Vcs.UpdateProject<CR>
"nmap <leader>u :action GotoSuperMethod<CR>
"nmap <leader>v :action $Paste<CR>
"nmap <leader>w :action EditorSelectWord<CR>
"nmap <leader>x :action $Cut<CR>
"nmap <leader>y :action EditorDeleteLine<CR>
"nmap <leader>z :action
"nmap <leader>[ :action EditorCodeBlockStart<CR>
"nmap <leader>] :action EditorCodeBlockEnd<CR>
"nmap <leader>\ :action

" =======================================

" External NVim
"nmap <leader>v :action Tool_External Tools_gvim<cr>

" ================================================
" VIM key notation:

" Key modifiers
" <C-?>          Control key plus some key
" <S-?>          Shift key plus some key
" <M-?> or <A-?> Alt key plus some key

" Special keys
" <BS>           Backspace
" <Tab>          Tab
" <CR>           Enter
" <Enter>        Enter
" <Return>       Enter
" <Esc>          Escape
" <Space>        Space
" <Up>           Up arrow
" <Down>         Down arrow
" <Left>         Left arrow
" <Right>        Right arrow
" <F1> - <F12>   Function keys 1 to 12
" #1, #2..#9,#0  Function keys F1 to F9, F10
" <Insert>       Insert
" <Del>          Delete
" <Home>         Home
" <End>          End
" <PageUp>       Page-Up
" <PageDown>     Page-Down
" <bar>          the '|' character, which otherwise needs to be escaped '\|'

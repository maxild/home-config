# vim: filetype=tmux
#
# More settings are in shells.nix
#
# bind is an alias for bind-key
# unind is an alias for unbind-key
# set is an alias for set-option
# 
# C- is ctrl
# M- is alt (aka meta) 
#
# In addition, the following special key names are accepted: 
#     Up, Down, Left, Right, BSpace, BTab, DC (Delete), End, Enter, 
#     Escape, F1 to F12, Home, IC (Insert), NPage/PageDown/PgDn, 
#     PPage/PageUp/PgUp, Space, and Tab. 

# Unbind default key bindings, we're going to override
unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
#unbind }    # swap-pane -D
#unbind {    # swap-pane -U
#unbind [    # paste-buffer
#unbind ]    
#unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
#unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
#unbind o    # focus thru panes
#unbind &    # kill-window
unbind "#"  # list-buffer 
unbind =    # choose-buffer
#unbind z    # zoom-pane
#unbind M-Up  # resize 5 rows up
#unbind M-Down # resize 5 rows down
#unbind M-Right # resize 5 rows right
#unbind M-Left # resize 5 rows left

## Prefix

# Alt-Space for prefix (conflicts with GNOME keyboard shortcuts)
#unbind-key M-Space 
#set-option -g prefix M-Space
#bind-key C-Space send-prefix

# Ctrl+Space for prefix (NOTE: C-q is another option, C-Tab is not possible, but C-q is close)
unbind-key C-b 
set-option -g prefix C-Space
bind-key C-Space send-prefix

## Global settings

# Automatically set window title
set-window-option -g automatic-rename on

# Set parent terminal title to reflect current window in tmux session 
set-option -g set-titles on
set -g set-titles-string "#I:#W"

set -g xterm-keys on

# Enable mouse support
setw -g mouse on

setw -g monitor-activity on

# Reload tmux configuration 
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"

# Set current window pane to 80 columns
bind-key 8 resize-pane -x 80

# Rename window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"

# Rename session
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Kill pane
bind x kill-pane

# Kill window/session shortcuts
bind X kill-window

bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

## Panes

# rebind split pane commands  
bind-key v   split-window -h
bind-key '\' split-window -h  
bind-key |   split-window -h  
bind-key h   split-window -v
bind-key -   split-window -v  
bind-key _   split-window -v  

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left  select-pane -L
bind -n M-Down  select-pane -D
bind -n M-Up    select-pane -U
bind -n M-Right select-pane -R

# resize panes Ctrl+vim nav keys (after sending prefix)
# Note: Ctrl+arrow_keys also work (by default)
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

## Windows

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

## Text manipulation

# Notes:
#  * tmux, like other full-screen terminal applications like vim, runs in so-called alternate screen buffer of a parent terminal. 
#  * any output, that exceeds the visible part of the alternate buffer, is lost. 
#  * to prevent history loss, tmux therefore implements it’s own “inner” scrollback buffer. 
#  * the consequence of this is that you cannot work with tmux inner scrollback same as you usually do within your terminal.

# Prefer vi style key table (vim-like copy/paste)
setw -g mode-keys vi

# To access the copy buffer items and paste the most recent item, use C-p and p:
bind p paste-buffer      # y and p as in vim
bind C-p choose-buffer

# trigger copy mode by (the default shortcut/key is [)
bind -n M-Up copy-mode

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

# wrap default shell in reattach-to-user-namespace if available
# there is some hack with `exec & reattach`, credits to "https://github.com/gpakosz/.tmux"
# don't really understand how it works, but at least window are not renamed to "reattach-to-user-namespace"
if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"

# shell script to yank/copy to system clipboard on osx and linux
yank="~/.config/tmux/yank.sh"

# Docs
#   * M-Up (or 'prefix-[') enters copy mode
#   * Space (or v) starts selection
#   * Enter (or y) copies selection and exits copy mode
#   * List all items in copy buffer using 'prefix C-p'
#   * Paste most recent item from the buffer using 'prexix p' (we have remapped prev-window)
#   * q will exit copy mode

bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi r send -X rectangle-toggle
bind-key -T copy-mode-vi Escape send -X cancel

# Copy selected text
# y just copies selected text and is equivalent to Enter, Y copies whole line, and D copies by the end of line.
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "$yank"  # y and p as in vim   
bind -T copy-mode-vi Y     send-keys -X copy-line \;\
    run "tmux save-buffer - | $yank"
bind -T copy-mode-vi D     send-keys -X copy-end-of-line \;\
    run "tmux save-buffer - | $yank"
bind -T copy-mode-vi A     send-keys -X append-selection-and-cancel \;\
    run "tmux save-buffer - | $yank"

## mouse

# Do not copy selection and cancel copy mode on drag end event
# Prefer iTerm style selection: select, then mouse click to copy to buffer

# Copy selection on drag end event, but do not cancel copy mode and do not clear selection
bind -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X copy-pipe "$yank"
# clear select on subsequence mouse click
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
   send-keys -X clear-selection

## Status bar

# increase status message display time to 2 seconds
set-option -g display-time 2000  

# status line text
set -g status-left-length 30
set -g status-left ' #(whoami)@#(hostname) | '
set -g status-right '%Y.%m.%d  %H.%M  '

# cyan background with black text
set -g status-style bg=cyan
set -ag status-style fg=black

# hilite active window in status bar
set-window-option -g window-status-current-style bg=yellow 

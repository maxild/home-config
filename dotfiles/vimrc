" ~/.config/nvim/init.vim

" == General configuration ==

set encoding=utf-8          " Set encoding
set nocompatible            " disable compatibility to old-time vi

set showmatch               " Highlight matching brace

set incsearch               " Incremental search
set hlsearch                " Highlight all search results
set ignorecase              " Ignore cases when searching
set smartcase               " With both ignorecase and smartcase turned on, a search is case-insensitive if you enter the search string in ALL lower case.

"set wildmode=list:longest,full " First <tab> shows list of completions, second <tab> show wildmenu
" tab completion for files/bufferss
set wildmode=longest,list
set wildmenu

set tabstop=4               " One tab = 4 spaces
set softtabstop=4           " see multiple spaces as tabstops so <BS> does the right thing
set expandtab               " Use spaces instead of tabs
set shiftwidth=4            " Number of auto-indent spaces

set autoindent              " indent a new line the same amount as the line just typed
set smartindent             " Autoindent when starting a new line
set smarttab                " Tab insertion & deletion

set nowrap                  " Don't add an actual linebreak when wrapping
set linebreak               " Break lines at word (requires Wrap lines)
set textwidth=80            " Line wrap (number of cols)
set colorcolumn=80          " set colour columns for good coding style
set nolist                  " do not show carriage return marker ($)

set backspace=indent,eol,start

set number                  " add line numbers
set relativenumber          " current line shows line number, and above and below are relative lines shown
set ruler                   " Show line & col number of cursor position

set visualbell              " Use visual bell (no beeping)

"filetype plugin indent on   " allow auto-indenting depending on file type
syntax on                   " syntax highlighting

""" Enable syntax
if has('syntax') && !exists('g:syntax_on')
    syntax enable
endif


""" Make , the leader key
let mapleader = ","


" == File Search (without plugins)

" Search down into subfolders
" Provides tab-completion for all file related tasks
set path+=**

" == Colors ==

" built-in schemes installed in `/usr/share/nvim/runtime/colors`; extra schemes in `~/.config/nvim/colors`
colorscheme default     " `default` picks up colors defined in `~/.Xresources`

set background=dark

set termguicolors
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

" == Uncommented for future reference ==

" set complete-=i      " Set the matches for insert mode completion
" set formatoptions+=j " Delete comment character when joining commented lines
" set laststatus=1     " No status line


" Strings to use in 'list' mode and for the :list command
" set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+

" easy escape
imap jk <Esc>

" send to ix.io
" noremap <silent> <leader>i :w !ix<CR>

" Invoke tab-completion from a mapping
set wildcharm=<C-z>

" NOTE: After installing ctrlp plugin most of this is uncommented
" Mappings to access buffers (don't use "\p" because a
" delay before pressing "p" would accidentally paste).
" ,l       : list files/buffers
" ,n       : new file/buffer
" ,b       : switch file/buffer
" ,e       : edit/open file/buffer
" ,p       : find/open file/buffer (fuzzy find without any plugins)
" ,k       : kill/delete buffer (file is not deleted)
" ,[ ,] ,, : go back to prev / go forward to next / go to last-used
" ,1 ,2 ,3 : go to buffer 1/2/3 etc
"nnoremap <leader>l :ls<CR>
"nnoremap <leader>n :enew<CR>
"nnoremap <leader>b :b <C-z>
" nnoremap ;b  :b <C-R>=expand("%:h") . "/" <CR>
"nnoremap <leader>e :e <C-z>
"nnoremap <leader>p :e <C-z>
" nnoremap ;e  :edit <C-R>=expand("%:h") . "/" <CR>
nnoremap <Leader>k :bd<CR>
nnoremap <Leader>[ :bp<CR>
nnoremap <Leader>] :bn<CR>
nnoremap <Leader>, :e#<CR>
nnoremap <Leader>1 :1b<CR>
nnoremap <Leader>2 :2b<CR>
nnoremap <Leader>3 :3b<CR>
nnoremap <Leader>4 :4b<CR>
nnoremap <Leader>5 :5b<CR>
nnoremap <Leader>6 :6b<CR>
nnoremap <Leader>7 :7b<CR>
nnoremap <Leader>8 :8b<CR>
nnoremap <Leader>9 :9b<CR>
nnoremap <Leader>0 :10b<CR>

" Open new split panes to right and bottom, which feels more natural
set splitbelow
set splitright

" Split with leader
nnoremap <Leader>v :vs <C-z>
nnoremap <Leader>s :sp <C-z>
"nnoremap <Leader>- :sp<CR>
"nnoremap <Leader>\| :vs<CR>

" Quicker window movement
nnoremap <C-j> <C-w>j " instead of ctrl-w then j, itâ€™s just ctrl-j
nnoremap <C-k> <C-w>k " etc..
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Quick copy paste
nmap <Leader>y "+y
vmap <Leader>y "+y
nmap <Leader>d "+d
vmap <Leader>d "+d
nmap <Leader>p "+p
vmap <Leader>p "+p
"nmap <Leader>P "+P
"vmap <Leader>P "+P

" Try to prevent bad habits like using the arrow keys for movement. This is
" not the only possible bad habit. For example, holding down the h/j/k/l keys
" for movement, rather than using more efficient movement commands, is also a
" bad habit. The former is enforceable through a .vimrc, while we don't know
" how to prevent the latter.
" Do this in normal mode...
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>
" ...and in insert mode
inoremap <Left>  <ESC>:echoe "Use h"<CR>
inoremap <Right> <ESC>:echoe "Use l"<CR>
inoremap <Up>    <ESC>:echoe "Use k"<CR>
inoremap <Down>  <ESC>:echoe "Use j"<CR>

" Don't offer to open certain files/directories
set wildignore+=*.pdf,*.psd
set wildignore+=node_modules/*,bower_components/*
set wildignore+=*/.git/*,*/tmp/*,*.swp


" clear out trailing whitespace and lines ending in whitespace
nmap <silent> ,w   :%s/[\t ]\+$//e<cr>

" clear the highlighting of :set hlsearch.
noremap <silent> <leader>n :nohls<cr><C-l>

" trailing spaces are always bad
syntax match Warning   display "\s\+$"
" mixed tabs and spaces
syntax match Warning   display " \+\t"
syntax match Warning   display "\t\+ "

" mark columns 80 and 81 in red for long lines...
"match ErrorMsg /\%80v.\%81v./

""" Easily find cursor with crosshair (,c)
" :hi CursorLine   cterm=NONE term=reverse ctermbg=7 guibg=Grey90
" :hi CursorColumn cterm=NONE term=reverse ctermbg=7 guibg=Grey90
" :nnoremap <Leader>c :set cursorline! cursorcolumn!<CR>

""" File browser
" let g:netrw_banner=0       " Disable file browser banner
" let g:netrw_liststyle=3    " Tree view

""" CTAGS shortcuts
" open definition in a new tab:
"map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
" open definition in a vertical split:
"map <A-]> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>


""" Plugins with vim-plug
" 2019.06.11: disabling b/c I'd rather just use nix/home-manager for vim
" plugins, but this is nice code to have for reference too
"if empty(glob('~/.vim/autoload/plug.vim'))
"    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
"    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
"    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
"endif
"so ~/.vim/plugins.vim

" --------------------
" Plugin configuration
" --------------------

" CtrlP settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Order matching files top to bottom
let g:ctrlp_match_window = 'bottom,order:ttb'
" Always open files in new buffers
let g:ctrlp_switch_buffer = 0
" Lets us change the working directory during a Vim session and make CtrlP
" respect that change.
let g:ctrlp_working_path_mode = 0
" Use rg to search instead
" https://elliotekj.com/2016/11/22/setup-ctrlp-to-use-ripgrep-in-vim/
if executable('rg')
  set grepprg=rg\ --color=never
  let g:ctrlp_user_command = 'rg %s --files --color=never --glob ""'
  let g:ctrlp_use_caching = 0
endif

" CtrlP buffer remap
" nnoremap ; :CtrlPBuffer<CR>

" show hidden files
let g:ctrlp_show_hidden = 1

" fzf settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"TODO: This key command does not work
"search for word under cursor by pressing |
nnoremap \| :Rg <C-R><C-W><cr>:cw<cr>
"start a search query by pressing \
nnoremap \ :Rg<space>

" search files by running $FZF_DEFAULT_COMMAND (defaultCommand from fzf config)
nnoremap <leader>e :Files<CR>
nnoremap <C-f> :Files<CR>

"search loaded buffers (project files)
nnoremap <leader>l :Lines<CR>

" search current buffer
nnoremap <leader>L :BLines<CR>

" searching commits require fugitive.vim plugin
"nnoremap <leader>c :Commits<CR>
"nnoremap <leader>C :BCommits<CR>

"search project files
"nnoremap <leader>p :FZF<cr>

"search project files by tags (requires ctags to be installed)
"nnoremap <leader>t :Tags<cr>

"search all open files/buffers
nnoremap <leader>b :Buffers<CR>

